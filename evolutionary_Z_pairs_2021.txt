#一些前期准备
if(1){
  #将小说和随笔作品分成2个语料库
  novels<-c(1:20, 41:60, 81:100, 121:140, 161:180)
  #ブロック化された小説作品のコーパス
  novels_blocks<-list(貴志祐介=1:20,
                      村上春樹=41:60,
                      村上龍  =81:100,
                      東野圭吾=121:140,
                      湊かなえ=161:180)
  essays<-c(21:40, 61:80, 101:120, 141:160, 181:200)
  #ブロック化された随筆作品のコーパス
  essays_blocks<-list(貴志祐介=21:40,
                      村上春樹=61:80,
                      村上龍  =101:120,
                      東野圭吾=141:160,
                      湊かなえ=181:200)
  Blocks<-list(小说=novels_blocks, 随笔=essays_blocks)
  #标签<-rep(c("貴志祐介", "村上春樹", "村上龍", "東野圭吾", "湊かなえ"), each=20)#准备标签（两个语料库共通）
  模块化标签<-list(貴志祐介=rep("貴志祐介", 20),
                   村上春樹=rep("村上春樹", 20),
                   村上龍  =rep("村上龍",   20),
                   東野圭吾=rep("東野圭吾", 20),
                   湊かなえ=rep("湊かなえ", 20))
}

evolutionary_Z_pairs_2021<-function(x, n=2, mode=1)
{
  #n为需要识别的作者数，mode决定对象为小说还是随笔（1为小说，2为随笔）
  #测试用
  if(0){x<-data_phrase_pattern_1$RES_char; n<-2; mode=1}
  if(n<1)stopifnot("n must larger than 2.\n")
  KumiAwase<-t(combn(1:5, m=n))#求组合
  num_KA<-nrow(KumiAwase)#求组合数
  Accu_vec<-NULL
  for(i in 1:num_KA){
    # i<-1
    temp_sn <-NULL; temp_lab<-NULL
    for(j in 1:n){
      temp_sn <-c(temp_sn,  Blocks[[mode]][[KumiAwase[i, j]]])
      temp_lab<-c(temp_lab, 模块化标签[[KumiAwase[i, j]]])
    }
    temp_data<-x[temp_sn, ]
    res_lab <-rep("", (n*20))
    temp_lab<-as.factor(temp_lab)
    #モデルの作成と適用
    if(1){
      for(j in 1:(n*20)){
        model.rf<-randomForest(x=temp_data[-j, ], y=temp_lab[-j], importance=FALSE)
        res_lab[j]<-as.character(predict(model.rf, temp_data[j,]))
      }
      Accu_vec<-c(Accu_vec, sum(as.character(temp_lab)==res_lab)/(n*20))
    }
  }
  list(Accu_vec=Accu_vec, average_Accu<-mean(Accu_vec), sd_Accu=sd(Accu_vec))
}
